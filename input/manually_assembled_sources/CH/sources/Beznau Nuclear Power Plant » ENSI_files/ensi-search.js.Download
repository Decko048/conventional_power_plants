/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./resources/js/ensi-search.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/api/index.js":
/*!***********************************!*\
  !*** ./resources/js/api/index.js ***!
  \***********************************/
/*! exports provided: loadAutocompleteResults */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadAutocompleteResults", function() { return loadAutocompleteResults; });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// API ******************************************************
//
var axios = Ensi.Ajax;
var Cache = Ensi.Cache;
var CancelToken = axios.CancelToken;
var CANCEL = {
  autocomplete: function autocomplete() {}
};
var ONE_DAY_IN_MS = 1000 * 60 * 60 * 24;

var generateCacheKey = function generateCacheKey(searchPhrase) {
  return 'ensi-search:' + searchPhrase;
};

var loadAutocompleteResults = function loadAutocompleteResults(search, update) {
  var _params;

  CANCEL.autocomplete();
  var cacheKey = generateCacheKey(search);

  if (Cache.get(cacheKey)) {
    update(Cache.get(cacheKey));
    return;
  }

  var config = {
    cancelToken: new CancelToken(function (c) {
      return CANCEL.autocomplete = c;
    }),
    params: (_params = {}, _defineProperty(_params, EnsiSearch.ajax.autocomplete.paramName.search, search), _defineProperty(_params, 'action', EnsiSearch.ajax.autocomplete.action), _params),
    // VIP backend is on different domain than frontend.
    withCredentials: true
  };
  axios.get(EnsiSearch.ajax.autocomplete.url, config).then(function (response) {
    var result = response.data;
    Cache.set(cacheKey, result.data, new Date().getTime() + ONE_DAY_IN_MS);
    update(result.data);
    return true;
  }).catch(function (e) {
    return console.log(e);
  });
};

/***/ }),

/***/ "./resources/js/components/autocomplete/autocomplete-container.js":
/*!************************************************************************!*\
  !*** ./resources/js/components/autocomplete/autocomplete-container.js ***!
  \************************************************************************/
/*! exports provided: AutocompleteContainer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutocompleteContainer", function() { return AutocompleteContainer; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

// Container ******************************************
//
// Autocomplete container with actions to show, hide, clear and states
//
var AutocompleteContainer =
/*#__PURE__*/
function () {
  function AutocompleteContainer($searchInput) {
    _classCallCheck(this, AutocompleteContainer);

    this.$input = $searchInput;
    this.$container = document.createElement("div");
    this.$container.className = "autocomplete";
    this.hide();
  }

  _createClass(AutocompleteContainer, [{
    key: "isDisplayed",
    value: function isDisplayed() {
      return !!this.$container.parentNode;
    }
  }, {
    key: "show",
    value: function show() {
      this.$container.style.display = 'block';
      this.$container.setAttribute('aria-expanded', 'true');
    }
  }, {
    key: "hide",
    value: function hide() {
      this.$container.style.display = 'none';
      this.$container.setAttribute('aria-expanded', 'false');
    }
  }, {
    key: "clear",
    value: function clear() {
      this.$container.innerHTML = '';
    }
  }, {
    key: "attach",
    value: function attach(html) {
      if (!this.$container.parentNode) {
        this.$input.parentNode.appendChild(this.$container);
      }

      this.$container.innerHTML = html;
    }
  }, {
    key: "clear",
    value: function clear() {
      // delete all children from autocomplete DOM container
      while (this.$container.firstChild) {
        this.$container.removeChild(this.$container.firstChild);
      }
    }
  }, {
    key: "isTarget",
    value: function isTarget($target) {
      return $target === this.$container;
    }
  }]);

  return AutocompleteContainer;
}();

/***/ }),

/***/ "./resources/js/components/autocomplete/autocomplete.js":
/*!**************************************************************!*\
  !*** ./resources/js/components/autocomplete/autocomplete.js ***!
  \**************************************************************/
/*! exports provided: autocomplete */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "autocomplete", function() { return autocomplete; });
// Autocomplete ******************************************
var debounceTimer;

var clearDebounceTimer = function clearDebounceTimer() {
  if (debounceTimer) {
    window.clearTimeout(debounceTimer);
  }
};

var inputValue = '';

var setInputValue = function setInputValue(newValue) {
  inputValue = newValue;
};

var getInputValue = function getInputValue() {
  return inputValue;
};

var result = '';

var setResult = function setResult(newResult) {
  result = newResult;
};

var getResult = function getResult() {
  return result;
};

var isKeyCodeValid = function isKeyCodeValid(keyCode) {
  var ignore = [38
  /* Up */
  , 13
  /* Enter */
  , 27
  /* Esc */
  , 39
  /* Right */
  , 37
  /* Left */
  , 16
  /* Shift */
  , 17
  /* Ctrl */
  , 18
  /* Alt */
  , 20
  /* CapsLock */
  , 91
  /* WindowsKey */
  , 9
  /* Tab */
  ];
  return keyCode !== 0 && ignore.indexOf(keyCode) === -1;
};

var keyUpEventName = function keyUpEventName() {
  var userAgent = navigator.userAgent;
  var mobileFirefox = userAgent.indexOf("Firefox") !== -1 && userAgent.indexOf("Mobile") !== -1; // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead

  return mobileFirefox ? "input" : "keyup";
};
/**
 * @param settings {
 *     input: <HTMLElement>,
 *     container: <AutocompleteContainer,
 *     onInputChange: <function>( <HTMLElement> $input, event ),
 *     minInputLength: <int>,
 *     fetch: <function>(value, <function>callback),
 * }
 */


var autocomplete = function autocomplete(settings) {
  // just an alias to minimize JS file size
  var $input = settings.input;
  var container = settings.container;

  function clear() {
    setResult([]);
    setInputValue('');
    container.clear();
  }
  /**
   * Redraw the autocomplete div element with suggestions
   */


  function update() {
    container.clear();

    var _getResult = getResult(),
        html = _getResult.html,
        stats = _getResult.stats;

    if (!stats.hasResults) {
      return;
    }

    container.attach(html);
  }

  function updateIfDisplayed() {
    if (container.isDisplayed()) {
      update();
    }
  }

  function onResize() {
    updateIfDisplayed();
  }

  function onScroll(event) {
    if (!container.isTarget(event.target)) {
      updateIfDisplayed();
    } else {
      event.preventDefault();
    }
  }

  function onFocus() {
    var val = $input.value;

    if (val.length === 0) {
      container.hide();
      return;
    }

    if (val.length < settings.minInputLength) {
      return;
    }

    container.show();
  }

  function onBlur() {
    // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
    setTimeout(function () {
      if (document.activeElement !== $input) {
        container.hide();
      }
    }, 200);
  }

  function onKeyup(event) {
    var val = $input.value;
    settings.onInputChange($input, event);

    if (val.length < settings.minInputLength) {
      container.hide();
    }

    var keyCode = event.which || event.keyCode || 0;

    if (isKeyCodeValid(keyCode)) {
      onChange(val);
    }
  }

  function onChange(val) {
    clear();
    clearDebounceTimer();
    setDebounceTimer(val);
  }

  function setDebounceTimer(value) {
    debounceTimer = window.setTimeout(function () {
      settings.fetch(value, function (items) {
        if (!items) {
          return;
        }

        setResult(items);
        setInputValue(value);
        update();
        onFocus();
      });
    }, 0);
  }

  $input.addEventListener("focus", onFocus);
  $input.addEventListener("blur", onBlur);
  $input.addEventListener(keyUpEventName(), onKeyup);
  window.addEventListener("resize", onResize);
  document.addEventListener("scroll", onScroll, true);
};

/***/ }),

/***/ "./resources/js/components/autocomplete/autocomplete.scss":
/*!****************************************************************!*\
  !*** ./resources/js/components/autocomplete/autocomplete.scss ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./resources/js/components/autocomplete/index.js":
/*!*******************************************************!*\
  !*** ./resources/js/components/autocomplete/index.js ***!
  \*******************************************************/
/*! exports provided: initAutocomplete */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAutocomplete", function() { return initAutocomplete; });
/* harmony import */ var _autocomplete__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./autocomplete */ "./resources/js/components/autocomplete/autocomplete.js");
/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../api */ "./resources/js/api/index.js");
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants */ "./resources/js/constants.js");
/* harmony import */ var _autocomplete_container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./autocomplete-container */ "./resources/js/components/autocomplete/autocomplete-container.js");
/* harmony import */ var _autocomplete_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./autocomplete.scss */ "./resources/js/components/autocomplete/autocomplete.scss");
/* harmony import */ var _autocomplete_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_autocomplete_scss__WEBPACK_IMPORTED_MODULE_4__);



 // SCSS related to this module.


var $input = document.getElementById(_constants__WEBPACK_IMPORTED_MODULE_2__["IDS"].searchInput);
var SETTINGS = {
  input: $input,
  container: new _autocomplete_container__WEBPACK_IMPORTED_MODULE_3__["AutocompleteContainer"]($input),
  onInputChange: function onInputChange($input, event) {
    var val = $input.value;

    if (val.length === 0) {
      Ensi.DOM.removeClass(document.querySelector(_constants__WEBPACK_IMPORTED_MODULE_2__["SELECTORS"].searchForm), _constants__WEBPACK_IMPORTED_MODULE_2__["CLASSES"].searchFormHasValue);
    } else {
      Ensi.DOM.addClass(document.querySelector(_constants__WEBPACK_IMPORTED_MODULE_2__["SELECTORS"].searchForm), _constants__WEBPACK_IMPORTED_MODULE_2__["CLASSES"].searchFormHasValue);
    }
  },
  minInputLength: 3,
  fetch: _api__WEBPACK_IMPORTED_MODULE_1__["loadAutocompleteResults"]
};
var initAutocomplete = function initAutocomplete() {
  Object(_autocomplete__WEBPACK_IMPORTED_MODULE_0__["autocomplete"])(SETTINGS);
};

/***/ }),

/***/ "./resources/js/components/show-more/index.js":
/*!****************************************************!*\
  !*** ./resources/js/components/show-more/index.js ***!
  \****************************************************/
/*! exports provided: showMoreResults */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showMoreResults", function() { return showMoreResults; });
/* harmony import */ var _show_more_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./show-more.scss */ "./resources/js/components/show-more/show-more.scss");
/* harmony import */ var _show_more_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_show_more_scss__WEBPACK_IMPORTED_MODULE_0__);
// Show more results ************************
//
//

var showMoreResults = function showMoreResults() {
  Ensi.Event.addEvent('.search-more__button', 'click', function (event) {
    event.preventDefault();
    var $button = event.currentTarget;
    var target = $button.getAttribute('data-target');
    var $target = document.querySelector(target);
    $target.style.display = 'block';
    Ensi.DOM.replaceWith($button, '');
  });
};

/***/ }),

/***/ "./resources/js/components/show-more/show-more.scss":
/*!**********************************************************!*\
  !*** ./resources/js/components/show-more/show-more.scss ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./resources/js/constants.js":
/*!***********************************!*\
  !*** ./resources/js/constants.js ***!
  \***********************************/
/*! exports provided: CLASSES, IDS, SELECTORS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLASSES", function() { return CLASSES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IDS", function() { return IDS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTORS", function() { return SELECTORS; });
var CLASSES = {
  'searchForm': 'search__form',
  'searchFormHasValue': 'search__form--hasValue',
  'searchInputHasFocus': 'search__input--hasFocus'
};
var IDS = {
  'searchInput': 'search__input'
};
var SELECTORS = {
  'searchForm': ".".concat(CLASSES.searchForm),
  'searchInput': "#".concat(IDS.searchInput),
  'postTypeFilter': ".".concat(CLASSES.postTypeFilter),
  'postTypeFilterSelected': ".".concat(CLASSES.postTypeFilterSelected),
  'showMore': '.search-more__button',
  'searchFormReset': ".".concat(CLASSES.searchFormReset)
};

/***/ }),

/***/ "./resources/js/ensi-search.js":
/*!*************************************!*\
  !*** ./resources/js/ensi-search.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _components_autocomplete__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/autocomplete */ "./resources/js/components/autocomplete/index.js");
/* harmony import */ var _components_show_more__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/show-more */ "./resources/js/components/show-more/index.js");
/* harmony import */ var _search_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./search.scss */ "./resources/js/search.scss");
/* harmony import */ var _search_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_search_scss__WEBPACK_IMPORTED_MODULE_2__);



Object(_components_autocomplete__WEBPACK_IMPORTED_MODULE_0__["initAutocomplete"])();
new Ensi.Components.Toggle({
  linkSelector: '.search__toggle'
});

if (Ensi.DOM.hasClass(document.body, 'search')) {
  Object(_components_show_more__WEBPACK_IMPORTED_MODULE_1__["showMoreResults"])();
  new Ensi.Components.Tabs(document.querySelector('.tabs--postTypeFilter'));
}

/***/ }),

/***/ "./resources/js/search.scss":
/*!**********************************!*\
  !*** ./resources/js/search.scss ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,